{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyrab\\\\Documents\\\\WPI\\\\Computer_Science\\\\MQP\\\\BrainEx-UI\\\\BrainEx\\\\src\\\\Components\\\\CurSeqLineChart.js\";\nimport React, { Component } from 'react';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport XYAxis from './chartComponents/Xy_axis';\nimport Line from './chartComponents/Line';\nimport { curveMonotoneX, line } from 'd3-shape';\nimport { extent } from 'd3-array';\nimport { transition } from 'd3-transition'; // import LogoButtonCard from '../molecules/Cards/LogoButtonCard';\n// const useStyles = makeStyles(theme => ({\n//     root: {\n//         display: 'flex',\n//         alignItems: 'center',\n//         justifyContent: 'center',\n//         margin: theme.spacing(1)\n//     },\n//     highlight: {\n//         backgroundColor: 'red',\n//     }\n// }));\n//\n// const classes = useStyles();\n\nclass CurSeqLineChart extends Component {\n  constructor() {\n    super();\n\n    this.randomData = e => {\n      e.preventDefault();\n      this.setState(prevState => {\n        const data = prevState.data.map(d => ({\n          timeStamp: d.timeStamp,\n          value: Math.floor(Math.random() * 100 + 1)\n        }));\n        return {\n          data\n        };\n      });\n    };\n\n    this.state = {\n      data: [{\n        timeStamp: 'Jan',\n        value: 30\n      }, {\n        timeStamp: 'Feb',\n        value: 10\n      }, {\n        timeStamp: 'Mar',\n        value: 50\n      }, {\n        timeStamp: 'Apr',\n        value: 20\n      }, {\n        timeStamp: 'May',\n        value: 80\n      }, {\n        timeStamp: 'Jun',\n        value: 30\n      }, {\n        timeStamp: 'July',\n        value: 0\n      }, {\n        timeStamp: 'Aug',\n        value: 20\n      }, {\n        timeStamp: 'Sep',\n        value: 100\n      }, {\n        timeStamp: 'Oct',\n        value: 55\n      }, {\n        timeStamp: 'Nov',\n        value: 60\n      }, {\n        timeStamp: 'Dec',\n        value: 80\n      }, {\n        timeStamp: 'Jan',\n        value: 30\n      }, {\n        timeStamp: 'Feb',\n        value: 10\n      }, {\n        timeStamp: 'Mar',\n        value: 50\n      }, {\n        timeStamp: 'Apr',\n        value: 20\n      }, {\n        timeStamp: 'May',\n        value: 80\n      }, {\n        timeStamp: 'Jun',\n        value: 30\n      }, {\n        timeStamp: 'July',\n        value: 0\n      }, {\n        timeStamp: 'Aug',\n        value: 20\n      }, {\n        timeStamp: 'Sep',\n        value: 100\n      }, {\n        timeStamp: 'Oct',\n        value: 55\n      }, {\n        timeStamp: 'Nov',\n        value: 60\n      }, {\n        timeStamp: 'Dec',\n        value: 80\n      }]\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = this.state;\n    const parentWidth = 500;\n    const margins = {\n      top: 20,\n      right: 20,\n      bottom: 20,\n      left: 20\n    };\n    const width = parentWidth - margins.left - margins.right;\n    const height = 200 - margins.top - margins.bottom;\n    const ticks = 5;\n    const t = transition().duration(1000);\n    const xScale = scaleBand().domain(data.map(d => d.timeStamp)).rangeRound([0, width]).padding(0.1);\n    const yScale = scaleLinear().domain(extent(data, d => d.value)).range([height, 0]).nice();\n    const lineGenerator = line().x(d => xScale(d.timeStamp)).y(d => yScale(d.value)).curve(curveMonotoneX);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.randomData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Randomize data\"), React.createElement(\"svg\", {\n      className: \"lineChartSvg\",\n      width: width + margins.left + margins.right,\n      height: height + margins.top + margins.bottom,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"g\", {\n      transform: `translate(${margins.left}, ${margins.top})`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(XYAxis, Object.assign({\n      xScale,\n      yScale,\n      height,\n      ticks,\n      t\n    }, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(Line, {\n      data: data,\n      xScale: xScale,\n      yScale: yScale,\n      lineGenerator: lineGenerator,\n      width: width,\n      height: height,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CurSeqLineChart; // render(<curSeqLineChart />, document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/kyrab/Documents/WPI/Computer_Science/MQP/BrainEx-UI/BrainEx/src/Components/CurSeqLineChart.js"],"names":["React","Component","scaleBand","scaleLinear","XYAxis","Line","curveMonotoneX","line","extent","transition","CurSeqLineChart","constructor","randomData","e","preventDefault","setState","prevState","data","map","d","timeStamp","value","Math","floor","random","state","render","parentWidth","margins","top","right","bottom","left","width","height","ticks","t","duration","xScale","domain","rangeRound","padding","yScale","range","nice","lineGenerator","x","y","curve"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {scaleBand, scaleLinear} from 'd3-scale';\r\nimport XYAxis from './chartComponents/Xy_axis';\r\nimport Line from './chartComponents/Line';\r\nimport {curveMonotoneX, line} from 'd3-shape';\r\nimport {extent} from 'd3-array';\r\nimport {transition} from 'd3-transition';\r\n\r\n// import LogoButtonCard from '../molecules/Cards/LogoButtonCard';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         justifyContent: 'center',\r\n//         margin: theme.spacing(1)\r\n//     },\r\n//     highlight: {\r\n//         backgroundColor: 'red',\r\n//     }\r\n// }));\r\n//\r\n// const classes = useStyles();\r\n\r\nclass CurSeqLineChart extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [\r\n                {timeStamp: 'Jan', value: 30},\r\n                {timeStamp: 'Feb', value: 10},\r\n                {timeStamp: 'Mar', value: 50},\r\n                {timeStamp: 'Apr', value: 20},\r\n                {timeStamp: 'May', value: 80},\r\n                {timeStamp: 'Jun', value: 30},\r\n                {timeStamp: 'July', value: 0},\r\n                {timeStamp: 'Aug', value: 20},\r\n                {timeStamp: 'Sep', value: 100},\r\n                {timeStamp: 'Oct', value: 55},\r\n                {timeStamp: 'Nov', value: 60},\r\n                {timeStamp: 'Dec', value: 80},\r\n                {timeStamp: 'Jan', value: 30},\r\n                {timeStamp: 'Feb', value: 10},\r\n                {timeStamp: 'Mar', value: 50},\r\n                {timeStamp: 'Apr', value: 20},\r\n                {timeStamp: 'May', value: 80},\r\n                {timeStamp: 'Jun', value: 30},\r\n                {timeStamp: 'July', value: 0},\r\n                {timeStamp: 'Aug', value: 20},\r\n                {timeStamp: 'Sep', value: 100},\r\n                {timeStamp: 'Oct', value: 55},\r\n                {timeStamp: 'Nov', value: 60},\r\n                {timeStamp: 'Dec', value: 80},\r\n\r\n            ],\r\n        }\r\n    }\r\n\r\n    randomData = (e) => {\r\n        e.preventDefault();\r\n        this.setState((prevState) => {\r\n            const data = prevState.data.map(d => ({\r\n                timeStamp: d.timeStamp,\r\n                value: Math.floor((Math.random() * 100) + 1)\r\n            }))\r\n            return {\r\n                data\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {data} = this.state;\r\n        const parentWidth = 500;\r\n\r\n        const margins = {\r\n            top: 20,\r\n            right: 20,\r\n            bottom: 20,\r\n            left: 20,\r\n        };\r\n\r\n        const width = parentWidth - margins.left - margins.right;\r\n        const height = 200 - margins.top - margins.bottom;\r\n\r\n        const ticks = 5;\r\n        const t = transition().duration(1000);\r\n\r\n        const xScale = scaleBand()\r\n            .domain(data.map(d => d.timeStamp))\r\n            .rangeRound([0, width]).padding(0.1);\r\n\r\n        const yScale = scaleLinear()\r\n            .domain(extent(data, d => d.value))\r\n            .range([height, 0])\r\n            .nice();\r\n\r\n        const lineGenerator = line()\r\n            .x(d => xScale(d.timeStamp))\r\n            .y(d => yScale(d.value))\r\n            .curve(curveMonotoneX);\r\n\r\n        return (\r\n            <div>\r\n                <button onClick={this.randomData}>Randomize data</button>\r\n                <svg\r\n                    className=\"lineChartSvg\"\r\n                    width={width + margins.left + margins.right}\r\n                    height={height + margins.top + margins.bottom}\r\n                >\r\n                    <g transform={`translate(${margins.left}, ${margins.top})`}>\r\n                        <XYAxis {...{xScale, yScale, height, ticks, t}} />\r\n                        <Line data={data} xScale={xScale} yScale={yScale} lineGenerator={lineGenerator} width={width}\r\n                              height={height}/>\r\n                    </g>\r\n                </svg>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurSeqLineChart;\r\n// render(<curSeqLineChart />, document.getElementById('root'));\r\n"]},"metadata":{},"sourceType":"module"}