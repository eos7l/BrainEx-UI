{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyrab\\\\Documents\\\\WPI\\\\Computer_Science\\\\MQP\\\\BrainEx-UI\\\\BrainEx\\\\src\\\\Components\\\\chartComponents\\\\Line.js\";\nimport React from 'react';\nimport { select, selectAll } from 'd3-selection';\nimport { transition } from 'd3-transition';\n\nclass Line extends React.Component {\n  constructor() {\n    super();\n    this.ref = React.createRef();\n  }\n\n  componentDidMount() {\n    const node = this.ref.current;\n    const {\n      xScale,\n      yScale,\n      data,\n      lineGenerator\n    } = this.props;\n    const initialData = data.map(d => ({\n      timeStamp: d.timeStamp,\n      value: 0\n    }));\n    select(node).append('path').datum(initialData).attr('id', 'line').attr('stroke', 'black').attr('stroke-width', 2).attr('fill', 'none').attr('d', lineGenerator); // select(node)\n    //   .selectAll('circle')\n    //   .data(data)\n    //   .enter()\n    //   .append('circle')\n    //   .attr('class', 'circle')\n    //   .attr('stroke', '#ECC417')\n    //   .attr('stroke-width', '2')\n    //   .attr('fill', '#333')\n    //   .attr('r', 3)\n    //   .attr('cx', (d, key) => xScale(key))\n    //   .attr('cy', d => yScale(d.count));\n\n    this.updateChart();\n  }\n\n  componentDidUpdate() {\n    this.updateChart();\n  }\n\n  updateChart() {\n    const {\n      lineGenerator,\n      xScale,\n      yScale,\n      data\n    } = this.props;\n    const t = transition().duration(1000);\n    const line = select('#line');\n    const dot = selectAll('.circle');\n    line.datum(data).transition(t).attr('d', lineGenerator); // dot\n    //   .data(data)\n    //   .transition(t)\n    //   .attr('cx', (d, key) => xScale(key))\n    //   .attr('cy', d => yScale(d.count));\n  }\n\n  render() {\n    return React.createElement(\"g\", {\n      className: \"line-group\",\n      ref: this.ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Line;","map":{"version":3,"sources":["C:/Users/kyrab/Documents/WPI/Computer_Science/MQP/BrainEx-UI/BrainEx/src/Components/chartComponents/Line.js"],"names":["React","select","selectAll","transition","Line","Component","constructor","ref","createRef","componentDidMount","node","current","xScale","yScale","data","lineGenerator","props","initialData","map","d","timeStamp","value","append","datum","attr","updateChart","componentDidUpdate","t","duration","line","dot","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,SAAhB,QAAgC,cAAhC;AACA,SAAQC,UAAR,QAAyB,eAAzB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,GAAL,GAAWP,KAAK,CAACQ,SAAN,EAAX;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,IAAI,GAAG,KAAKH,GAAL,CAASI,OAAtB;AACA,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA,MAAT;AAAiBC,MAAAA,IAAjB;AAAuBC,MAAAA;AAAvB,QAAwC,KAAKC,KAAnD;AAEA,UAAMC,WAAW,GAAGH,IAAI,CAACI,GAAL,CAASC,CAAC,KAAK;AAC/BC,MAAAA,SAAS,EAAED,CAAC,CAACC,SADkB;AAE/BC,MAAAA,KAAK,EAAE;AAFwB,KAAL,CAAV,CAApB;AAKApB,IAAAA,MAAM,CAACS,IAAD,CAAN,CACKY,MADL,CACY,MADZ,EAEKC,KAFL,CAEWN,WAFX,EAGKO,IAHL,CAGU,IAHV,EAGgB,MAHhB,EAIKA,IAJL,CAIU,QAJV,EAIoB,OAJpB,EAKKA,IALL,CAKU,cALV,EAK0B,CAL1B,EAMKA,IANL,CAMU,MANV,EAMkB,MANlB,EAOKA,IAPL,CAOU,GAPV,EAOeT,aAPf,EATgB,CAkBhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAKU,WAAL;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKD,WAAL;AACH;;AAEDA,EAAAA,WAAW,GAAG;AACV,UAAM;AACFV,MAAAA,aADE;AACaH,MAAAA,MADb;AACqBC,MAAAA,MADrB;AAC6BC,MAAAA;AAD7B,QAEF,KAAKE,KAFT;AAIA,UAAMW,CAAC,GAAGxB,UAAU,GAAGyB,QAAb,CAAsB,IAAtB,CAAV;AAEA,UAAMC,IAAI,GAAG5B,MAAM,CAAC,OAAD,CAAnB;AACA,UAAM6B,GAAG,GAAG5B,SAAS,CAAC,SAAD,CAArB;AAEA2B,IAAAA,IAAI,CACCN,KADL,CACWT,IADX,EAEKX,UAFL,CAEgBwB,CAFhB,EAGKH,IAHL,CAGU,GAHV,EAGeT,aAHf,EAVU,CAeV;AACA;AACA;AACA;AACA;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,WAAO;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,MAAA,GAAG,EAAE,KAAKxB,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AApE8B;;AAuEnC,eAAeH,IAAf","sourcesContent":["import React from 'react';\r\nimport {select, selectAll} from 'd3-selection';\r\nimport {transition} from 'd3-transition';\r\n\r\nclass Line extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.ref = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const node = this.ref.current;\r\n        const {xScale, yScale, data, lineGenerator} = this.props;\r\n\r\n        const initialData = data.map(d => ({\r\n            timeStamp: d.timeStamp,\r\n            value: 0\r\n        }));\r\n\r\n        select(node)\r\n            .append('path')\r\n            .datum(initialData)\r\n            .attr('id', 'line')\r\n            .attr('stroke', 'black')\r\n            .attr('stroke-width', 2)\r\n            .attr('fill', 'none')\r\n            .attr('d', lineGenerator);\r\n\r\n        // select(node)\r\n        //   .selectAll('circle')\r\n        //   .data(data)\r\n        //   .enter()\r\n        //   .append('circle')\r\n        //   .attr('class', 'circle')\r\n        //   .attr('stroke', '#ECC417')\r\n        //   .attr('stroke-width', '2')\r\n        //   .attr('fill', '#333')\r\n        //   .attr('r', 3)\r\n        //   .attr('cx', (d, key) => xScale(key))\r\n        //   .attr('cy', d => yScale(d.count));\r\n\r\n        this.updateChart()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.updateChart();\r\n    }\r\n\r\n    updateChart() {\r\n        const {\r\n            lineGenerator, xScale, yScale, data,\r\n        } = this.props;\r\n\r\n        const t = transition().duration(1000);\r\n\r\n        const line = select('#line');\r\n        const dot = selectAll('.circle');\r\n\r\n        line\r\n            .datum(data)\r\n            .transition(t)\r\n            .attr('d', lineGenerator);\r\n\r\n        // dot\r\n        //   .data(data)\r\n        //   .transition(t)\r\n        //   .attr('cx', (d, key) => xScale(key))\r\n        //   .attr('cy', d => yScale(d.count));\r\n    }\r\n\r\n    render() {\r\n        return <g className=\"line-group\" ref={this.ref}/>;\r\n    }\r\n}\r\n\r\nexport default Line;\r\n"]},"metadata":{},"sourceType":"module"}