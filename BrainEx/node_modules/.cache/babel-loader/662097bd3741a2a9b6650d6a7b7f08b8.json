{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kyrab\\\\Documents\\\\WPI\\\\Computer_Science\\\\MQP\\\\BrainEx-UI\\\\BrainEx\\\\src\\\\Components\\\\SelectNewDataset.js\";\nimport React, { Component } from 'react';\nimport { preprocessed_files, rawdata_files } from \"../dummy_data\";\nimport '../Stylesheets/Home.css';\nimport { Button, Link, Typography, ButtonGroup } from '@material-ui/core';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FormData from \"form-data\";\nimport $ from \"jquery\";\nimport axios from 'axios';\n\nclass SelectNewDataset extends Component {\n  constructor(props) {\n    super(props);\n\n    this.fileHandler = e => {\n      $(\".curr-file\").show(); // for debugging purposes\n\n      let curr_file = e.currentTarget; // must use currentTarget to access only the button attributes\n\n      console.log(\"current file:\"); // for debugging purposes\n\n      console.log(curr_file); // for debugging purposes\n\n      /* store the currently selected file in state */\n\n      this.setState({\n        current_file: curr_file\n      });\n    };\n\n    this.onChangeHandler = e => {\n      // convert FileList to an array of files\n      const new_files = [...e.target.files];\n      /*store files to be uploaded in state*/\n\n      this.setState({\n        upload_files: new_files\n      }, () => {\n        console.log(\"upload files added to state successfully:\"); // for debugging purposes\n\n        console.log(this.state.upload_files); // cannot print text and object in the same console.log\n      }); // print state for debugging\n    };\n\n    this.onClickHandler = e => {\n      e.preventDefault(); // prevents page refresh on submit\n\n      /* create form data object and append files to be uploaded onto it*/\n\n      let file_form = new FormData();\n      let new_files = this.state.upload_files;\n      new_files.map(file => {\n        file_form.append(\"uploaded_data\", file); // add upload_files to FormData object\n      });\n      console.log(...file_form); // for debugging purposes\n\n      let all_files = this.state.all_files; // Hook up to Kyra's server\n\n      console.log(\"Right before\");\n      axios.post('http://localhost:5000/getCSV', file_form).then(function (response) {\n        console.log(response);\n      }).catch(function (error) {\n        console.log(error);\n      });\n      console.log(\"Right after\"); // // todo instead of below, send file_form to the server and make state update somehow\n      // this.setState({\n      //     all_files: all_files.concat(new_files),\n      //     upload_files: null // reset upload_files to none\n      // }, () => {\n      //     console.log(\"files \\\"uploaded\\\" successfully\"); // for debugging purposes\n      //     console.log(this.state.all_files);\n      // });\n    };\n\n    this.state = {\n      current_file: {},\n\n      /* for storing the currently selected file in the file-list */\n      upload_files: null,\n\n      /* for storing the file(s) chosen to be uploaded */\n      all_files: []\n      /* for storing files displayed in file-list */\n\n    };\n    /* binding all handlers to the class */\n\n    this.onChangeHandler = this.onChangeHandler.bind(this);\n    this.onClickHandler = this.onClickHandler.bind(this);\n    this.fileHandler = this.fileHandler.bind(this);\n  }\n  /*pull files from database here. this function is called after render() so all elements will be in place*/\n\n\n  componentDidMount() {\n    this.setState({\n      all_files: rawdata_files\n    });\n  }\n  /* file select handler. triggered once user clicks on a file in the file-list */\n  // todo use this function to do any handling once a file in the list is selected\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"full-height\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row no-gutters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col col-3 no-gutters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"left d-flex justify-content-center align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"home-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"directions\",\n      variant: \"h4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Select a dataset to preview here\"), React.createElement(ButtonGroup, {\n      className: \"file-list\",\n      orientation: \"vertical\",\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, this.state.all_files.map((file, index) => React.createElement(Button, {\n      name: file.name,\n      className: \"btn-file\",\n      variant: \"contained\",\n      key: index,\n      onClick: this.fileHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, file.name))), React.createElement(\"form\", {\n      className: \"form-group files home-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"directions\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Load another dataset\"), React.createElement(\"div\", {\n      className: \"new-file d-flex justify-content-center align-items-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      className: \"form-control-file\",\n      accept: \".csv\",\n      onChange: this.onChangeHandler,\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      className: \"btn-primary\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.onClickHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add\")))))), React.createElement(\"div\", {\n      className: \"col no-gutters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"right build\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"home-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"curr-file\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, this.state.current_file.name), \" \", React.createElement(Link, {\n      className: \"build-btn right-btn btn btn-primary\",\n      variant: \"button\",\n      color: \"default\",\n      underline: \"none\",\n      component: RouterLink,\n      to: \"/BuildOptions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Next\"), React.createElement(Link, {\n      className: \"build-btn left-btn btn btn-secondary\",\n      variant: \"button\",\n      color: \"default\",\n      underline: \"none\",\n      component: RouterLink,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Back\"))))));\n  }\n\n}\n\nexport default SelectNewDataset;","map":{"version":3,"sources":["C:/Users/kyrab/Documents/WPI/Computer_Science/MQP/BrainEx-UI/BrainEx/src/Components/SelectNewDataset.js"],"names":["React","Component","preprocessed_files","rawdata_files","Button","Link","Typography","ButtonGroup","RouterLink","FormData","$","axios","SelectNewDataset","constructor","props","fileHandler","e","show","curr_file","currentTarget","console","log","setState","current_file","onChangeHandler","new_files","target","files","upload_files","state","onClickHandler","preventDefault","file_form","map","file","append","all_files","post","then","response","catch","error","bind","componentDidMount","render","index","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {preprocessed_files, rawdata_files} from \"../dummy_data\";\r\nimport '../Stylesheets/Home.css';\r\nimport { Button, Link, Typography, ButtonGroup } from '@material-ui/core';\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport FormData from \"form-data\";\r\nimport $ from \"jquery\";\r\nimport axios from 'axios';\r\n\r\nclass SelectNewDataset extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            current_file: {}, /* for storing the currently selected file in the file-list */\r\n            upload_files: null, /* for storing the file(s) chosen to be uploaded */\r\n            all_files: [] /* for storing files displayed in file-list */\r\n        };\r\n        /* binding all handlers to the class */\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.onClickHandler = this.onClickHandler.bind(this);\r\n        this.fileHandler = this.fileHandler.bind(this);\r\n    }\r\n\r\n    /*pull files from database here. this function is called after render() so all elements will be in place*/\r\n    componentDidMount() {\r\n        this.setState({\r\n            all_files: rawdata_files\r\n        });\r\n    }\r\n\r\n    /* file select handler. triggered once user clicks on a file in the file-list */\r\n    // todo use this function to do any handling once a file in the list is selected\r\n    fileHandler = (e) => {\r\n        $(\".curr-file\").show(); // for debugging purposes\r\n        let curr_file = e.currentTarget; // must use currentTarget to access only the button attributes\r\n\r\n        console.log(\"current file:\"); // for debugging purposes\r\n        console.log(curr_file); // for debugging purposes\r\n\r\n        /* store the currently selected file in state */\r\n        this.setState({\r\n            current_file: curr_file\r\n        });\r\n    };\r\n\r\n    /* triggered when files are selected from the file explorer. stores files to be uploaded to state so they can be accessed\r\n    * when the \"Add\" button is clicked */\r\n    onChangeHandler = (e) => {\r\n        // convert FileList to an array of files\r\n        const new_files = [...e.target.files];\r\n        /*store files to be uploaded in state*/\r\n        this.setState({\r\n                upload_files: new_files\r\n            }, () => {\r\n            console.log(\"upload files added to state successfully:\"); // for debugging purposes\r\n            console.log(this.state.upload_files) // cannot print text and object in the same console.log\r\n        }); // print state for debugging\r\n    };\r\n\r\n    /* when \"add\" is triggered this function takes the files currently in upload_states and should\r\n    * send them to the server.\r\n    * todo the server should then add them to wherever all_files is pulling from */\r\n    onClickHandler = (e) => {\r\n        e.preventDefault(); // prevents page refresh on submit\r\n        /* create form data object and append files to be uploaded onto it*/\r\n        let file_form = new FormData();\r\n        let new_files = this.state.upload_files;\r\n        new_files.map((file) => {\r\n            file_form.append(\"uploaded_data\", file); // add upload_files to FormData object\r\n        });\r\n        console.log(...file_form); // for debugging purposes\r\n        let all_files = this.state.all_files;\r\n        // Hook up to Kyra's server\r\n        console.log(\"Right before\")\r\n        axios.post('http://localhost:5000/getCSV', file_form)\r\n        .then(function (response) {\r\n          console.log(response);\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n        console.log(\"Right after\")\r\n\r\n\r\n\r\n\r\n        // // todo instead of below, send file_form to the server and make state update somehow\r\n        // this.setState({\r\n        //     all_files: all_files.concat(new_files),\r\n        //     upload_files: null // reset upload_files to none\r\n        // }, () => {\r\n        //     console.log(\"files \\\"uploaded\\\" successfully\"); // for debugging purposes\r\n        //     console.log(this.state.all_files);\r\n        // });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"full-height\">\r\n                <div className=\"row no-gutters\">\r\n                    <div className=\"col col-3 no-gutters\">\r\n                        <div className=\"left d-flex justify-content-center align-items-center\">\r\n                            <div className=\"home-content\">\r\n                                {/*list of files from the server (all_files, current_file)*/}\r\n                                <Typography className=\"directions\" variant=\"h4\">Select a dataset to preview here</Typography>\r\n                                <ButtonGroup className=\"file-list\" orientation=\"vertical\" color=\"primary\">\r\n                                    { this.state.all_files.map((file, index) => (\r\n                                       <Button name={file.name} className=\"btn-file\" variant=\"contained\" key={index} onClick={this.fileHandler}>{file.name}</Button>\r\n                                    ))}\r\n                                </ButtonGroup>\r\n                                {/*adding a new file (upload_files)*/}\r\n                                <form className=\"form-group files home-content\">\r\n                                    <Typography className=\"directions\" variant=\"h5\">Load another dataset</Typography>\r\n                                    <div className=\"new-file d-flex justify-content-center align-items-center\">\r\n                                        <input type=\"file\" name=\"file\" className=\"form-control-file\" accept=\".csv\" onChange={this.onChangeHandler} multiple/>\r\n                                        <Button type=\"submit\" className=\"btn-primary\" variant=\"contained\" color=\"primary\" onClick={this.onClickHandler}>Add</Button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col no-gutters\">\r\n                        <div className=\"right build\">\r\n                            <div className=\"home-content\">\r\n                                <p className=\"curr-file\">{this.state.current_file.name}</p> {/*for debugging purposes*/}\r\n                                <Link\r\n                                    className=\"build-btn right-btn btn btn-primary\"\r\n                                    variant=\"button\"\r\n                                    color=\"default\"\r\n                                    underline=\"none\"\r\n                                    component={RouterLink}\r\n                                    to=\"/BuildOptions\" >\r\n                                    Next\r\n                                </Link>\r\n                                <Link\r\n                                    className=\"build-btn left-btn btn btn-secondary\"\r\n                                    variant=\"button\"\r\n                                    color=\"default\"\r\n                                    underline=\"none\"\r\n                                    component={RouterLink}\r\n                                    to=\"/\">\r\n                                    Back\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectNewDataset;\r\n"]},"metadata":{},"sourceType":"module"}