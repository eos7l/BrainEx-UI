{"ast":null,"code":"import { linearish } from \"./linear\";\nexport default function diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function (_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function (_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function (_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function () {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}","map":{"version":3,"sources":["C:/Users/kyrab/Documents/WPI/Computer_Science/MQP/BrainEx-UI/BrainEx/node_modules/d3-scale/src/diverging.js"],"names":["linearish","diverging","interpolator","x0","x1","x2","k10","k21","clamp","scale","x","t","Math","max","min","domain","_","arguments","length","copy"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,UAAxB;AAEA,eAAe,SAASC,SAAT,CAAmBC,YAAnB,EAAiC;AAC9C,MAAIC,EAAE,GAAG,CAAT;AAAA,MACIC,EAAE,GAAG,GADT;AAAA,MAEIC,EAAE,GAAG,CAFT;AAAA,MAGIC,GAAG,GAAG,CAHV;AAAA,MAIIC,GAAG,GAAG,CAJV;AAAA,MAKIC,KAAK,GAAG,KALZ;;AAOA,WAASC,KAAT,CAAeC,CAAf,EAAkB;AAChB,QAAIC,CAAC,GAAG,MAAM,CAAC,CAACD,CAAC,GAAG,CAACA,CAAN,IAAWN,EAAZ,KAAmBM,CAAC,GAAGN,EAAJ,GAASE,GAAT,GAAeC,GAAlC,CAAd;AACA,WAAOL,YAAY,CAACM,KAAK,GAAGI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,GAAL,CAAS,CAAT,EAAYH,CAAZ,CAAZ,CAAH,GAAiCA,CAAvC,CAAnB;AACD;;AAEDF,EAAAA,KAAK,CAACM,MAAN,GAAe,UAASC,CAAT,EAAY;AACzB,WAAOC,SAAS,CAACC,MAAV,IAAoBf,EAAE,GAAG,CAACa,CAAC,CAAC,CAAD,CAAP,EAAYZ,EAAE,GAAG,CAACY,CAAC,CAAC,CAAD,CAAnB,EAAwBX,EAAE,GAAG,CAACW,CAAC,CAAC,CAAD,CAA/B,EAAoCV,GAAG,GAAGH,EAAE,KAAKC,EAAP,GAAY,CAAZ,GAAgB,OAAOA,EAAE,GAAGD,EAAZ,CAA1D,EAA2EI,GAAG,GAAGH,EAAE,KAAKC,EAAP,GAAY,CAAZ,GAAgB,OAAOA,EAAE,GAAGD,EAAZ,CAAjG,EAAkHK,KAAtI,IAA+I,CAACN,EAAD,EAAKC,EAAL,EAASC,EAAT,CAAtJ;AACD,GAFD;;AAIAI,EAAAA,KAAK,CAACD,KAAN,GAAc,UAASQ,CAAT,EAAY;AACxB,WAAOC,SAAS,CAACC,MAAV,IAAoBV,KAAK,GAAG,CAAC,CAACQ,CAAV,EAAaP,KAAjC,IAA0CD,KAAjD;AACD,GAFD;;AAIAC,EAAAA,KAAK,CAACP,YAAN,GAAqB,UAASc,CAAT,EAAY;AAC/B,WAAOC,SAAS,CAACC,MAAV,IAAoBhB,YAAY,GAAGc,CAAf,EAAkBP,KAAtC,IAA+CP,YAAtD;AACD,GAFD;;AAIAO,EAAAA,KAAK,CAACU,IAAN,GAAa,YAAW;AACtB,WAAOlB,SAAS,CAACC,YAAD,CAAT,CAAwBa,MAAxB,CAA+B,CAACZ,EAAD,EAAKC,EAAL,EAASC,EAAT,CAA/B,EAA6CG,KAA7C,CAAmDA,KAAnD,CAAP;AACD,GAFD;;AAIA,SAAOR,SAAS,CAACS,KAAD,CAAhB;AACD","sourcesContent":["import {linearish} from \"./linear\";\r\n\r\nexport default function diverging(interpolator) {\r\n  var x0 = 0,\r\n      x1 = 0.5,\r\n      x2 = 1,\r\n      k10 = 1,\r\n      k21 = 1,\r\n      clamp = false;\r\n\r\n  function scale(x) {\r\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\r\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\r\n  }\r\n\r\n  scale.domain = function(_) {\r\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\r\n  };\r\n\r\n  scale.clamp = function(_) {\r\n    return arguments.length ? (clamp = !!_, scale) : clamp;\r\n  };\r\n\r\n  scale.interpolator = function(_) {\r\n    return arguments.length ? (interpolator = _, scale) : interpolator;\r\n  };\r\n\r\n  scale.copy = function() {\r\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\r\n  };\r\n\r\n  return linearish(scale);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}